{"ast":null,"code":"// import Item1 from '../../images/item1.jpg'\nimport Item1 from '../../images/ugu.png'; // import Item2 from '../../images/item2.jpg'\n\nimport Item2 from '../../images/oha.jpeg'; // import Item3 from '../../images/item3.jpg'\n\nimport Item3 from '../../images/okazi.jpeg'; // import Item4 from '../../images/item4.jpg'\n\nimport Item4 from '../../images/utazi.jpeg'; // import Item5 from '../../images/item5.jpg'\n\nimport Item5 from '../../images/egusi.jpeg'; // import Item6 from '../../images/item6.jpg'\n\nimport Item6 from '../../images/scent.jpeg';\nimport { ADD_TO_CART, REMOVE_ITEM, SUB_QUANTITY, ADD_QUANTITY, ADD_SHIPPING } from '../actions/action-types/cart-actions';\nconst initState = {\n  items: [{\n    id: 1,\n    title: 'Ugu Leaf',\n    desc: \"Order for your fresh vegetable leaf. Recieve before payment when ordered. Thanks\",\n    price: 500,\n    img: Item1\n  }, {\n    id: 2,\n    title: 'Oha Leaf',\n    desc: \"Order for your fresh vegetable leaf. Recieve before payment when ordered. Thanks\",\n    price: 350,\n    img: Item2\n  }, {\n    id: 3,\n    title: 'Okazi Leaf',\n    desc: \"Order for your fresh vegetable leaf. Recieve before payment when ordered. Thanks\",\n    price: 1500,\n    img: Item3\n  }, {\n    id: 4,\n    title: 'Utazi Leaf',\n    desc: \"Order for your fresh vegetable leaf. Recieve before payment when ordered. Thanks\",\n    price: 260,\n    img: Item4\n  }, {\n    id: 5,\n    title: 'Egusi',\n    desc: \"Order for your fresh egusi. Recieve before payment when ordered. Thanks\",\n    price: 900,\n    img: Item5\n  }, {\n    id: 6,\n    title: 'Scent Leaf',\n    desc: \"Order for your fresh vegetable leaf. Recieve before payment when ordered. Thanks\",\n    price: 250,\n    img: Item6\n  }],\n  addedItems: [],\n  total: 0\n};\n\nconst cartReducer = (state = initState, action) => {\n  //INSIDE HOME COMPONENT\n  if (action.type === ADD_TO_CART) {\n    let addedItem = state.items.find(item => item.id === action.id); //check if the action id exists in the addedItems\n\n    let existed_item = state.addedItems.find(item => action.id === item.id);\n\n    if (existed_item) {\n      addedItem.quantity += 1;\n      return { ...state,\n        total: state.total + addedItem.price\n      };\n    } else {\n      addedItem.quantity = 1; //calculating the total\n\n      let newTotal = state.total + addedItem.price;\n      return { ...state,\n        addedItems: [...state.addedItems, addedItem],\n        total: newTotal\n      };\n    }\n  }\n\n  if (action.type === REMOVE_ITEM) {\n    let itemToRemove = state.addedItems.find(item => action.id === item.id);\n    let new_items = state.addedItems.filter(item => action.id !== item.id); //calculating the total\n\n    let newTotal = state.total - itemToRemove.price * itemToRemove.quantity;\n    console.log(itemToRemove);\n    return { ...state,\n      addedItems: new_items,\n      total: newTotal\n    };\n  } //INSIDE CART COMPONENT\n\n\n  if (action.type === ADD_QUANTITY) {\n    let addedItem = state.items.find(item => item.id === action.id);\n    addedItem.quantity += 1;\n    let newTotal = state.total + addedItem.price;\n    return { ...state,\n      total: newTotal\n    };\n  }\n\n  if (action.type === SUB_QUANTITY) {\n    let addedItem = state.items.find(item => item.id === action.id); //if the qt == 0 then it should be removed\n\n    if (addedItem.quantity === 1) {\n      let new_items = state.addedItems.filter(item => item.id !== action.id);\n      let newTotal = state.total - addedItem.price;\n      return { ...state,\n        addedItems: new_items,\n        total: newTotal\n      };\n    } else {\n      addedItem.quantity -= 1;\n      let newTotal = state.total - addedItem.price;\n      return { ...state,\n        total: newTotal\n      };\n    }\n  }\n\n  if (action.type === ADD_SHIPPING) {\n    return { ...state,\n      total: state.total + 150\n    };\n  }\n\n  if (action.type === 'SUB_SHIPPING') {\n    return { ...state,\n      total: state.total - 150\n    };\n  } else {\n    return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/home/idlegend/Desktop/myPROJECTS/uzoma/client/src/components/reducers/cartReducer.js"],"names":["Item1","Item2","Item3","Item4","Item5","Item6","ADD_TO_CART","REMOVE_ITEM","SUB_QUANTITY","ADD_QUANTITY","ADD_SHIPPING","initState","items","id","title","desc","price","img","addedItems","total","cartReducer","state","action","type","addedItem","find","item","existed_item","quantity","newTotal","itemToRemove","new_items","filter","console","log"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,sBAAlB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,uBAAlB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,yBAAlB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,yBAAlB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,yBAAlB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,WAAT,EAAqBC,WAArB,EAAiCC,YAAjC,EAA8CC,YAA9C,EAA2DC,YAA3D,QAA+E,sCAA/E;AAGA,MAAMC,SAAS,GAAG;AACdC,EAAAA,KAAK,EAAE,CACH;AAACC,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,KAAK,EAAC,UAAZ;AAAwBC,IAAAA,IAAI,EAAE,kFAA9B;AAAkHC,IAAAA,KAAK,EAAC,GAAxH;AAA4HC,IAAAA,GAAG,EAACjB;AAAhI,GADG,EAEH;AAACa,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,KAAK,EAAC,UAAZ;AAAwBC,IAAAA,IAAI,EAAE,kFAA9B;AAAkHC,IAAAA,KAAK,EAAC,GAAxH;AAA4HC,IAAAA,GAAG,EAAEhB;AAAjI,GAFG,EAGH;AAACY,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,KAAK,EAAC,YAAZ;AAA0BC,IAAAA,IAAI,EAAE,kFAAhC;AAAmHC,IAAAA,KAAK,EAAC,IAAzH;AAA8HC,IAAAA,GAAG,EAAEf;AAAnI,GAHG,EAIH;AAACW,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,KAAK,EAAC,YAAZ;AAA0BC,IAAAA,IAAI,EAAE,kFAAhC;AAAoHC,IAAAA,KAAK,EAAC,GAA1H;AAA8HC,IAAAA,GAAG,EAACd;AAAlI,GAJG,EAKH;AAACU,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,KAAK,EAAC,OAAZ;AAAqBC,IAAAA,IAAI,EAAE,yEAA3B;AAAsGC,IAAAA,KAAK,EAAC,GAA5G;AAAgHC,IAAAA,GAAG,EAAEb;AAArH,GALG,EAMH;AAACS,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,KAAK,EAAC,YAAZ;AAA0BC,IAAAA,IAAI,EAAE,kFAAhC;AAAmHC,IAAAA,KAAK,EAAC,GAAzH;AAA6HC,IAAAA,GAAG,EAAEZ;AAAlI,GANG,CADO;AASda,EAAAA,UAAU,EAAC,EATG;AAUdC,EAAAA,KAAK,EAAE;AAVO,CAAlB;;AAaA,MAAMC,WAAW,GAAE,CAACC,KAAK,GAAGV,SAAT,EAAmBW,MAAnB,KAA4B;AAE3C;AACA,MAAGA,MAAM,CAACC,IAAP,KAAgBjB,WAAnB,EAA+B;AACzB,QAAIkB,SAAS,GAAGH,KAAK,CAACT,KAAN,CAAYa,IAAZ,CAAiBC,IAAI,IAAGA,IAAI,CAACb,EAAL,KAAYS,MAAM,CAACT,EAA3C,CAAhB,CADyB,CAEzB;;AACD,QAAIc,YAAY,GAAEN,KAAK,CAACH,UAAN,CAAiBO,IAAjB,CAAsBC,IAAI,IAAGJ,MAAM,CAACT,EAAP,KAAca,IAAI,CAACb,EAAhD,CAAlB;;AACA,QAAGc,YAAH,EACA;AACGH,MAAAA,SAAS,CAACI,QAAV,IAAsB,CAAtB;AACC,aAAM,EACH,GAAGP,KADA;AAEFF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAcK,SAAS,CAACR;AAF7B,OAAN;AAIJ,KAPA,MAQI;AACDQ,MAAAA,SAAS,CAACI,QAAV,GAAqB,CAArB,CADC,CAED;;AACA,UAAIC,QAAQ,GAAGR,KAAK,CAACF,KAAN,GAAcK,SAAS,CAACR,KAAvC;AAEA,aAAM,EACF,GAAGK,KADD;AAEFH,QAAAA,UAAU,EAAE,CAAC,GAAGG,KAAK,CAACH,UAAV,EAAsBM,SAAtB,CAFV;AAGFL,QAAAA,KAAK,EAAGU;AAHN,OAAN;AAMH;AACJ;;AACD,MAAGP,MAAM,CAACC,IAAP,KAAgBhB,WAAnB,EAA+B;AAC3B,QAAIuB,YAAY,GAAET,KAAK,CAACH,UAAN,CAAiBO,IAAjB,CAAsBC,IAAI,IAAGJ,MAAM,CAACT,EAAP,KAAca,IAAI,CAACb,EAAhD,CAAlB;AACA,QAAIkB,SAAS,GAAGV,KAAK,CAACH,UAAN,CAAiBc,MAAjB,CAAwBN,IAAI,IAAGJ,MAAM,CAACT,EAAP,KAAca,IAAI,CAACb,EAAlD,CAAhB,CAF2B,CAI3B;;AACA,QAAIgB,QAAQ,GAAGR,KAAK,CAACF,KAAN,GAAeW,YAAY,CAACd,KAAb,GAAqBc,YAAY,CAACF,QAAhE;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAZ;AACA,WAAM,EACF,GAAGT,KADD;AAEFH,MAAAA,UAAU,EAAEa,SAFV;AAGFZ,MAAAA,KAAK,EAAEU;AAHL,KAAN;AAKH,GAxC0C,CAyC3C;;;AACA,MAAGP,MAAM,CAACC,IAAP,KAAed,YAAlB,EAA+B;AAC3B,QAAIe,SAAS,GAAGH,KAAK,CAACT,KAAN,CAAYa,IAAZ,CAAiBC,IAAI,IAAGA,IAAI,CAACb,EAAL,KAAYS,MAAM,CAACT,EAA3C,CAAhB;AACEW,IAAAA,SAAS,CAACI,QAAV,IAAsB,CAAtB;AACA,QAAIC,QAAQ,GAAGR,KAAK,CAACF,KAAN,GAAcK,SAAS,CAACR,KAAvC;AACA,WAAM,EACF,GAAGK,KADD;AAEFF,MAAAA,KAAK,EAAEU;AAFL,KAAN;AAIL;;AACD,MAAGP,MAAM,CAACC,IAAP,KAAef,YAAlB,EAA+B;AAC3B,QAAIgB,SAAS,GAAGH,KAAK,CAACT,KAAN,CAAYa,IAAZ,CAAiBC,IAAI,IAAGA,IAAI,CAACb,EAAL,KAAYS,MAAM,CAACT,EAA3C,CAAhB,CAD2B,CAE3B;;AACA,QAAGW,SAAS,CAACI,QAAV,KAAuB,CAA1B,EAA4B;AACxB,UAAIG,SAAS,GAAGV,KAAK,CAACH,UAAN,CAAiBc,MAAjB,CAAwBN,IAAI,IAAEA,IAAI,CAACb,EAAL,KAAYS,MAAM,CAACT,EAAjD,CAAhB;AACA,UAAIgB,QAAQ,GAAGR,KAAK,CAACF,KAAN,GAAcK,SAAS,CAACR,KAAvC;AACA,aAAM,EACF,GAAGK,KADD;AAEFH,QAAAA,UAAU,EAAEa,SAFV;AAGFZ,QAAAA,KAAK,EAAEU;AAHL,OAAN;AAKH,KARD,MASK;AACDL,MAAAA,SAAS,CAACI,QAAV,IAAsB,CAAtB;AACA,UAAIC,QAAQ,GAAGR,KAAK,CAACF,KAAN,GAAcK,SAAS,CAACR,KAAvC;AACA,aAAM,EACF,GAAGK,KADD;AAEFF,QAAAA,KAAK,EAAEU;AAFL,OAAN;AAIH;AAEJ;;AAED,MAAGP,MAAM,CAACC,IAAP,KAAeb,YAAlB,EAA+B;AACzB,WAAM,EACF,GAAGW,KADD;AAEFF,MAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAFnB,KAAN;AAIL;;AAED,MAAGG,MAAM,CAACC,IAAP,KAAe,cAAlB,EAAiC;AAC7B,WAAM,EACF,GAAGF,KADD;AAEFF,MAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAFnB,KAAN;AAIL,GALC,MAOE;AACF,WAAOE,KAAP;AACC;AAEJ,CA5FD;;AA8FA,eAAeD,WAAf","sourcesContent":["// import Item1 from '../../images/item1.jpg'\nimport Item1 from '../../images/ugu.png'\n// import Item2 from '../../images/item2.jpg'\nimport Item2 from '../../images/oha.jpeg'\n// import Item3 from '../../images/item3.jpg'\nimport Item3 from '../../images/okazi.jpeg'\n// import Item4 from '../../images/item4.jpg'\nimport Item4 from '../../images/utazi.jpeg'\n// import Item5 from '../../images/item5.jpg'\nimport Item5 from '../../images/egusi.jpeg'\n// import Item6 from '../../images/item6.jpg'\nimport Item6 from '../../images/scent.jpeg'\nimport { ADD_TO_CART,REMOVE_ITEM,SUB_QUANTITY,ADD_QUANTITY,ADD_SHIPPING } from '../actions/action-types/cart-actions'\n\n\nconst initState = {\n    items: [\n        {id:1,title:'Ugu Leaf', desc: \"Order for your fresh vegetable leaf. Recieve before payment when ordered. Thanks\", price:500,img:Item1},\n        {id:2,title:'Oha Leaf', desc: \"Order for your fresh vegetable leaf. Recieve before payment when ordered. Thanks\", price:350,img: Item2},\n        {id:3,title:'Okazi Leaf', desc: \"Order for your fresh vegetable leaf. Recieve before payment when ordered. Thanks\",price:1500,img: Item3},\n        {id:4,title:'Utazi Leaf', desc: \"Order for your fresh vegetable leaf. Recieve before payment when ordered. Thanks\", price:260,img:Item4},\n        {id:5,title:'Egusi', desc: \"Order for your fresh egusi. Recieve before payment when ordered. Thanks\", price:900,img: Item5},\n        {id:6,title:'Scent Leaf', desc: \"Order for your fresh vegetable leaf. Recieve before payment when ordered. Thanks\",price:250,img: Item6}\n    ],\n    addedItems:[],\n    total: 0\n\n}\nconst cartReducer= (state = initState,action)=>{\n   \n    //INSIDE HOME COMPONENT\n    if(action.type === ADD_TO_CART){\n          let addedItem = state.items.find(item=> item.id === action.id)\n          //check if the action id exists in the addedItems\n         let existed_item= state.addedItems.find(item=> action.id === item.id)\n         if(existed_item)\n         {\n            addedItem.quantity += 1 \n             return{\n                ...state,\n                 total: state.total + addedItem.price \n                  }\n        }\n         else{\n            addedItem.quantity = 1;\n            //calculating the total\n            let newTotal = state.total + addedItem.price \n            \n            return{\n                ...state,\n                addedItems: [...state.addedItems, addedItem],\n                total : newTotal\n            }\n            \n        }\n    }\n    if(action.type === REMOVE_ITEM){\n        let itemToRemove= state.addedItems.find(item=> action.id === item.id)\n        let new_items = state.addedItems.filter(item=> action.id !== item.id)\n        \n        //calculating the total\n        let newTotal = state.total - (itemToRemove.price * itemToRemove.quantity )\n        console.log(itemToRemove)\n        return{\n            ...state,\n            addedItems: new_items,\n            total: newTotal\n        }\n    }\n    //INSIDE CART COMPONENT\n    if(action.type=== ADD_QUANTITY){\n        let addedItem = state.items.find(item=> item.id === action.id)\n          addedItem.quantity += 1 \n          let newTotal = state.total + addedItem.price\n          return{\n              ...state,\n              total: newTotal\n          }\n    }\n    if(action.type=== SUB_QUANTITY){  \n        let addedItem = state.items.find(item=> item.id === action.id) \n        //if the qt == 0 then it should be removed\n        if(addedItem.quantity === 1){\n            let new_items = state.addedItems.filter(item=>item.id !== action.id)\n            let newTotal = state.total - addedItem.price\n            return{\n                ...state,\n                addedItems: new_items,\n                total: newTotal\n            }\n        }\n        else {\n            addedItem.quantity -= 1\n            let newTotal = state.total - addedItem.price\n            return{\n                ...state,\n                total: newTotal\n            }\n        }\n        \n    }\n\n    if(action.type=== ADD_SHIPPING){\n          return{\n              ...state,\n              total: state.total + 150\n          }\n    }\n\n    if(action.type=== 'SUB_SHIPPING'){\n        return{\n            ...state,\n            total: state.total - 150\n        }\n  }\n    \n  else{\n    return state\n    }\n    \n}\n\nexport default cartReducer"]},"metadata":{},"sourceType":"module"}